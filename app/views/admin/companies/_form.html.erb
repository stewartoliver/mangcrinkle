<%= form_with(model: [:admin, company], class: "space-y-8") do |form| %>
  <% if company.errors.any? %>
    <div class="rounded-md bg-red-50 p-4">
      <div class="flex">
        <div class="flex-shrink-0">
          <svg class="h-5 w-5 text-red-400" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
          </svg>
        </div>
        <div class="ml-3">
          <h3 class="text-sm font-medium text-red-800">
            <%= pluralize(company.errors.count, "error") %> prohibited this company from being saved:
          </h3>
          <div class="mt-2 text-sm text-red-700">
            <ul class="list-disc pl-5 space-y-1">
              <% company.errors.full_messages.each do |message| %>
                <li><%= message %></li>
              <% end %>
            </ul>
          </div>
        </div>
      </div>
    </div>
  <% end %>

  <!-- Basic Information Section -->
  <div class="bg-white border border-orange-200 rounded-lg p-6">
    <h3 class="text-lg font-semibold text-orange-950 mb-4 border-b border-orange-100 pb-2">
      Basic Information
    </h3>
    
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
      <div class="lg:col-span-2">
        <%= form.label :name, "Company Name", class: "form-label" %>
        <%= form.text_field :name, class: "form-input", placeholder: "Enter the company name" %>
      </div>
      
      <div>
        <%= form.label :email, "Contact Email", class: "form-label" %>
        <%= form.email_field :email, class: "form-input", placeholder: "contact@company.com" %>
      </div>
      
      <div>
        <%= form.label :phone, "Phone Number", class: "form-label" %>
        <%= form.telephone_field :phone, class: "form-input", placeholder: "(555) 123-4567" %>
      </div>
      
      <div class="lg:col-span-2">
        <%= form.label :website, "Website", class: "form-label" %>
        <%= form.url_field :website, class: "form-input", placeholder: "https://www.company.com" %>
      </div>
    </div>
  </div>

  <!-- Contact Information Section -->
  <div class="bg-white border border-orange-200 rounded-lg p-6">
    <h3 class="text-lg font-semibold text-orange-950 mb-4 border-b border-orange-100 pb-2">
      Contact Information
    </h3>
    
    <div class="space-y-4">
      <div>
        <%= form.label :address, "Address", class: "form-label" %>
        <p class="text-xs text-orange-600 mb-2">Full business address including city, state, and zip code</p>
        <%= form.text_area :address, rows: 3, class: "form-textarea", placeholder: "Street address, city, state, zip" %>
      </div>
      
      <div>
        <%= form.label :business_hours, "Business Hours", class: "form-label" %>
        <p class="text-xs text-orange-600 mb-2">Enter as JSON object or leave blank for default hours</p>
        <%= form.text_area :business_hours, rows: 4, class: "form-textarea", 
            placeholder: '{"monday": "9:00 AM - 5:00 PM", "tuesday": "9:00 AM - 5:00 PM", "wednesday": "9:00 AM - 5:00 PM", "thursday": "9:00 AM - 5:00 PM", "friday": "9:00 AM - 5:00 PM", "saturday": "Closed", "sunday": "Closed"}', 
            value: company.business_hours.is_a?(Hash) ? company.business_hours.to_json : company.business_hours %>
      </div>
    </div>
  </div>

  <!-- Logo Section -->
  <div class="bg-white border border-orange-200 rounded-lg p-6">
    <h3 class="text-lg font-semibold text-orange-950 mb-4 border-b border-orange-100 pb-2">
      Company Logo
    </h3>
    
    <div id="imageManagerContainer" 
         data-existing-images='<%= raw(
           if company.has_logo?
             [{
               image: {
                 id: company.logo.id,
                 blob_id: company.logo.blob.id,
                 url: url_for(company.logo)
               },
               is_primary: true
             }].to_json
           else
             "[]"
           end
         ) %>'
         data-primary-image-id="<%= company.has_logo? ? company.logo.id : '' %>"
         data-max-images="1">
      <!-- Image manager will be rendered here by JavaScript -->
    </div>
    
    <!-- Hidden file input for form submission -->
    <%= form.file_field :logo, accept: "image/*", 
        style: "display: none;", id: "hiddenImageInput" %>
  </div>

  <!-- Description Section -->
  <div class="bg-white border border-orange-200 rounded-lg p-6">
    <h3 class="text-lg font-semibold text-orange-950 mb-4 border-b border-orange-100 pb-2">
      Company Description
    </h3>
    
    <div>
      <%= form.label :description, "About the Company", class: "form-label" %>
      <p class="text-xs text-orange-600 mb-2">Brief description of the company and its services</p>
      <%= form.text_area :description, rows: 4, class: "form-textarea", placeholder: "Tell customers about your company..." %>
    </div>
  </div>

  <!-- Status Section -->
  <div class="bg-white border border-orange-200 rounded-lg p-6">
    <h3 class="text-lg font-semibold text-orange-950 mb-4 border-b border-orange-100 pb-2">
      Company Status
    </h3>
    
    <div class="admin-status-section">
      <div class="admin-status-info">
        <h4 class="admin-status-title">Company Visibility</h4>
        <p class="admin-status-description">
          Control whether this company information is publicly visible
        </p>
        <div class="mt-2 space-y-1">
          <div class="flex items-center text-xs text-orange-600">
            <span class="inline-block w-2 h-2 bg-green-500 rounded-full mr-2"></span>
            <span><strong>Active:</strong> Company information is publicly visible</span>
          </div>
          <div class="flex items-center text-xs text-orange-600">
            <span class="inline-block w-2 h-2 bg-gray-400 rounded-full mr-2"></span>
            <span><strong>Inactive:</strong> Company information is hidden from public view</span>
          </div>
        </div>
      </div>
      
      <div class="admin-status-toggle">
        <label class="admin-toggle-switch">
          <%= form.check_box :active, class: "admin-toggle-input", checked: company.active? %>
          <span class="admin-toggle-slider"></span>
          <span class="admin-toggle-labels">
            <span class="admin-toggle-active">Active</span>
            <span class="admin-toggle-inactive">Inactive</span>
          </span>
        </label>
      </div>
    </div>
  </div>

  <!-- Action Buttons -->
  <div class="flex justify-end space-x-3 pt-6 border-t border-orange-200">
    <%= link_to "Cancel", company.persisted? ? admin_company_path(company) : admin_companies_path, 
        class: "admin-btn-secondary" %>
    <%= form.submit company.persisted? ? "Update Company" : "Create Company", 
        class: "admin-btn-primary" %>
  </div>
<% end %>

<script>
function initializeImageManager() {
  const container = document.getElementById('imageManagerContainer');
  if (!container) return;
  
  const existingImagesData = container.dataset.existingImages;
  const primaryImageId = container.dataset.primaryImageId;
  const maxImages = parseInt(container.dataset.maxImages) || 1;
  
  console.log('Initializing company logo manager with data:', {
    existingImagesData,
    primaryImageId,
    maxImages
  });
  
  // Parse existing images data
  let existingImages = [];
  if (existingImagesData && existingImagesData !== 'null' && existingImagesData !== '[]') {
    try {
      const parsedData = JSON.parse(existingImagesData);
      console.log('Parsed data:', parsedData);
      
      if (Array.isArray(parsedData)) {
        existingImages = parsedData.map(img => {
          console.log('Processing image:', img);
          
          // Handle both direct image objects and nested image objects
          const imageData = img.image || img;
          
          return {
            id: imageData.id,
            url: imageData.url,
            isNew: false
          };
        }).filter(img => img.id && img.url); // Filter out invalid entries
      }
    } catch (e) {
      console.error('Error parsing existing images:', e);
      console.error('Raw data:', existingImagesData);
    }
  }
  
  console.log('Final existing images:', existingImages);
  
  // Initialize the image manager
  window.imageManager = new ImageManager(container, {
    maxImages: maxImages,
    allowPrimary: false, // No primary selection needed for single logo
    fieldName: 'company[logo]',
    primaryFieldName: null
  });
  
  // Set existing images
  window.imageManager.currentImages = existingImages;
  
  // Re-render with existing data
  window.imageManager.renderImages();
  window.imageManager.updateUploadVisibility();
  
  // Handle form submission
  const form = container.closest('form');
  if (form) {
    form.addEventListener('submit', function(e) {
      console.log('Form submission - Image manager state:', {
        currentImages: window.imageManager.currentImages.length,
        newFiles: window.imageManager.newFiles.length,
        totalImages: window.imageManager.currentImages.length + window.imageManager.newFiles.length
      });
      
      // Update hidden fields before submission
      window.imageManager.updateHiddenFields();
      
      // Handle new file uploads
      const hiddenInput = document.getElementById('hiddenImageInput');
      if (hiddenInput && window.imageManager.newFiles.length > 0) {
        console.log('Transferring logo file to hidden input:', window.imageManager.newFiles.length);
        
        const fileTransfer = new DataTransfer();
        
        // For single logo, just take the first file
        if (window.imageManager.newFiles[0]) {
          console.log('Adding logo file:', window.imageManager.newFiles[0].file.name);
          fileTransfer.items.add(window.imageManager.newFiles[0].file);
        }
        
        hiddenInput.files = fileTransfer.files;
        console.log('Hidden input now has files:', hiddenInput.files.length);
        
        // Verify the file is there
        if (hiddenInput.files.length > 0) {
          console.log('Hidden input logo file:', hiddenInput.files[0].name);
        }
      } else {
        console.log('No new logo file to transfer or hidden input not found');
      }
    });
  }
}

// Initialize on page load and Turbo navigation
document.addEventListener('DOMContentLoaded', initializeImageManager);
document.addEventListener('turbo:load', initializeImageManager);
document.addEventListener('turbo:render', initializeImageManager);
</script> 