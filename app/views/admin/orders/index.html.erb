<% content_for :title, "Orders" %>

<!-- Statistics Cards - Horizontal Flex Row -->
<div class="flex flex-wrap gap-4 mb-6">
  <div class="admin-stats-card flex-1 min-w-0">
    <div class="flex items-center">
      <div class="admin-stats-icon admin-stats-icon-yellow">
        <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>
      </div>
      <div class="admin-stats-content">
        <h2 class="admin-stats-label">Pending</h2>
        <p class="admin-stats-value admin-stats-value-yellow"><%= @orders_by_status['pending']&.count || 0 %></p>
      </div>
    </div>
  </div>

  <div class="admin-stats-card flex-1 min-w-0">
    <div class="flex items-center">
      <div class="admin-stats-icon admin-stats-icon-orange">
        <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z" />
        </svg>
      </div>
      <div class="admin-stats-content">
        <h2 class="admin-stats-label">Total Orders</h2>
        <p class="admin-stats-value admin-stats-value-orange"><%= @total_orders %></p>
      </div>
    </div>
  </div>

  <div class="admin-stats-card flex-1 min-w-0">
    <div class="flex items-center">
      <div class="admin-stats-icon admin-stats-icon-blue">
        <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>
      </div>
      <div class="admin-stats-content">
        <h2 class="admin-stats-label">Processing</h2>
        <p class="admin-stats-value admin-stats-value-blue"><%= @orders_by_status['processing']&.count || 0 %></p>
      </div>
    </div>
  </div>

  <div class="admin-stats-card flex-1 min-w-0">
    <div class="flex items-center">
      <div class="admin-stats-icon admin-stats-icon-green">
        <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>
      </div>
      <div class="admin-stats-content">
        <h2 class="admin-stats-label">Total Revenue</h2>
        <p class="admin-stats-value admin-stats-value-green">$<%= number_with_precision(@total_revenue, precision: 2) %></p>
      </div>
    </div>
  </div>
</div>

<!-- Main Orders Table with Integrated Filters -->
<div class="admin-container">
  <div class="admin-container-header">
    <div class="flex items-center justify-between">
      <h3 class="admin-container-title">Orders</h3>
      <div class="flex items-center space-x-3">
        <%= link_to "Create Order", new_admin_order_path, class: "admin-btn-primary" %>
      </div>
    </div>
  </div>

  <!-- Search Filters - Two Flex Rows -->
  <%= form_with url: admin_orders_path, method: :get, local: true, class: "px-6 py-4 border-b border-orange-200 bg-gray-50", id: "search-form" do |form| %>
    <div class="space-y-4">
      <!-- First Row -->
      <div class="flex flex-wrap gap-4">
        <div class="flex-1 min-w-0">
          <%= form.label :customer_name, "Customer Name", class: "form-label" %>
          <div class="mt-1">
            <%= form.text_field :customer_name, value: params[:customer_name], placeholder: "Search by name", class: "form-input" %>
          </div>
        </div>
        
        <div class="flex-1 min-w-0">
          <%= form.label :status, "Status", class: "form-label" %>
          <div class="mt-1">
            <%= form.select :status, 
                options_for_select([
                  ['All Statuses', ''],
                  ['Pending', 'pending'],
                  ['Processing', 'processing'],
                  ['Completed', 'completed'],
                  ['Cancelled', 'cancelled']
                ], params[:status]),
                {},
                class: "form-select" %>
          </div>
        </div>
        
        <div class="flex-1 min-w-0">
          <%= form.label :order_source, "Order Source", class: "form-label" %>
          <div class="mt-1">
            <%= form.select :order_source, 
                options_for_select([
                  ['All Sources', ''],
                  ['Website', 'website'],
                  ['Admin Phone', 'admin_phone'],
                  ['Admin Email', 'admin_email']
                ], params[:order_source]),
                {},
                class: "form-select" %>
          </div>
        </div>
      </div>
      
      <!-- Second Row -->
      <div class="flex flex-wrap gap-4">
        <div class="flex-1 min-w-0">
          <%= form.label :email, "Email", class: "form-label" %>
          <div class="mt-1">
            <%= form.email_field :email, value: params[:email], placeholder: "Search by email", class: "form-input" %>
          </div>
        </div>
        
        <div class="flex-1 min-w-0">
          <%= form.label :email_search_type, "Email Search Type", class: "form-label" %>
          <div class="mt-1">
            <%= form.select :email_search_type, 
                options_for_select([
                  ['Exact Match', 'exact'],
                  ['Partial Match', 'partial']
                ], params[:email_search_type] || 'exact'),
                {},
                class: "form-select" %>
          </div>
        </div>
        
        <div class="flex-1 min-w-0">
          <%= form.label :start_date, "Start Date", class: "form-label" %>
          <div class="mt-1">
            <%= form.date_field :start_date, value: params[:start_date], class: "form-date" %>
          </div>
        </div>
      </div>
    </div>
  <% end %>

  <!-- Filter Buttons Section -->
  <div class="px-6 py-3 border-b border-orange-200 bg-gray-50">
    <div class="flex justify-end">
      <div class="flex items-center space-x-2">
        <button type="submit" form="search-form" class="admin-btn-primary">
          Apply Filters
        </button>
        <%= link_to "Clear", admin_orders_path, class: "admin-btn-secondary" %>
      </div>
    </div>
  </div>

  <!-- Orders Table -->
  <div class="admin-container-content">
    <table class="admin-table">
      <thead class="admin-table-header">
        <tr>
          <th scope="col" class="admin-table-header-cell">Customer</th>
          <th scope="col" class="admin-table-header-cell-center">Date</th>
          <th scope="col" class="admin-table-header-cell-center">Total</th>
          <th scope="col" class="admin-table-header-cell-center">Status</th>
          <th scope="col" class="admin-table-header-cell-center">Source</th>
          <th scope="col" class="admin-table-header-cell-right">Actions</th>
        </tr>
      </thead>
      <tbody class="admin-table-body">
        <% @orders.each do |order| %>
          <tr class="admin-table-row" data-order-id="<%= order.id %>">
            <td class="admin-table-cell">
              <div class="text-sm font-medium text-orange-950"><%= order.customer_name %></div>
              <div class="text-xs text-orange-600"><%= order.email %></div>
            </td>
            <td class="admin-table-cell-center">
              <div class="text-sm font-medium text-orange-950">
                <%= order.created_at.strftime("%m/%d/%Y") %>
              </div>
              <div class="text-xs text-orange-600">
                <%= time_ago_in_words(order.created_at) %> ago
              </div>
            </td>
            <td class="admin-table-cell-center text-sm text-orange-600">
              $<%= number_with_precision(order.total_price, precision: 2) %>
            </td>
            <td class="admin-table-cell-center text-sm">
              <span class="admin-status-badge 
                <%= case order.status
                    when 'pending' then 'admin-status-pending'
                    when 'processing' then 'admin-status-processing'
                    when 'completed' then 'admin-status-completed'
                    when 'cancelled' then 'admin-status-cancelled'
                    else 'admin-status-default'
                    end %>">
                <%= order.status.titleize %>
              </span>
            </td>
            <td class="admin-table-cell-center text-sm">
              <span class="admin-status-badge 
                <%= case order.order_source
                    when 'website' then 'bg-blue-100 text-blue-800'
                    when 'admin_phone' then 'bg-purple-100 text-purple-800'
                    when 'admin_email' then 'bg-indigo-100 text-indigo-800'
                    else 'bg-gray-100 text-gray-800'
                    end %>">
                <%= order.order_source_display %>
              </span>
            </td>
            <td class="admin-table-cell-right">
              <div class="admin-action-btn-group">
                <!-- Order Contents Toggle Button -->
                <button type="button" 
                        class="order-contents-toggle admin-action-btn" 
                        data-order-id="<%= order.id %>"
                        title="View Order Contents">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                  </svg>
                </button>
                
                <%= link_to admin_order_path(order), class: "admin-action-btn", title: "View" do %>
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                  </svg>
                <% end %>
                <%= link_to edit_admin_order_path(order), class: "admin-action-btn", title: "Edit" do %>
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                  </svg>
                <% end %>
                <button type="button" 
                        class="admin-action-btn-danger" 
                        data-order-id="<%= order.id %>"
                        data-order-path="<%= admin_order_path(order) %>"
                        title="Delete">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                  </svg>
                </button>
              </div>
            </td>
          </tr>
          
          <!-- Expandable Order Details Row -->
          <tr class="order-contents-details hidden" data-order-id="<%= order.id %>">
            <td colspan="6" class="px-6 py-4 bg-orange-50 border-t border-orange-200">
              <div class="bg-white rounded-lg p-4 border border-orange-200">
                <h4 class="text-lg font-medium text-orange-950 mb-4 flex items-center">
                  <svg class="w-5 h-5 mr-2 text-orange-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                  </svg>
                  Order Items
                </h4>
                
                <div class="overflow-x-auto">
                  <table class="admin-table">
                    <thead class="admin-table-header">
                      <tr>
                        <th scope="col" class="admin-table-header-cell">Item</th>
                        <th scope="col" class="admin-table-header-cell-center">Quantity</th>
                        <th scope="col" class="admin-table-header-cell-center">Price</th>
                        <th scope="col" class="admin-table-header-cell-center">Subtotal</th>
                      </tr>
                    </thead>
                    <tbody class="admin-table-body">
                      <% order.line_items.each do |item| %>
                        <tr>
                          <td class="admin-table-cell">
                            <div class="text-sm font-medium text-orange-950"><%= item.name %></div>
                            <% if item.description.present? %>
                              <div class="text-sm text-orange-600"><%= item.description %></div>
                            <% end %>
                            <% if item.purchasable.is_a?(CrinklePackage) && item.selected_products.any? %>
                              <div class="mt-2 text-xs text-orange-500">
                                <div class="font-medium mb-1">Selected items:</div>
                                <% item.selected_products.each do |selected| %>
                                  <div class="ml-2">• <%= selected[:quantity] %>x <%= selected[:product].name %></div>
                                <% end %>
                              </div>
                            <% end %>
                          </td>
                          <td class="admin-table-cell-center text-sm text-orange-600">
                            <%= item.quantity %>
                          </td>
                          <td class="admin-table-cell-center text-sm text-orange-600">
                            $<%= number_with_precision(item.price, precision: 2) %>
                          </td>
                          <td class="admin-table-cell-center text-sm text-orange-600">
                            $<%= number_with_precision(item.subtotal, precision: 2) %>
                          </td>
                        </tr>
                      <% end %>
                    </tbody>
                    <tfoot class="bg-orange-50">
                      <tr>
                        <td colspan="3" class="px-6 py-4 text-right text-sm font-medium text-orange-950">Total:</td>
                        <td class="px-6 py-4 text-center text-sm font-medium text-orange-950">
                          $<%= number_with_precision(order.total_price, precision: 2) %>
                        </td>
                      </tr>
                    </tfoot>
                  </table>
                </div>
              </div>
            </td>
          </tr>
        <% end %>
      </tbody>
    </table>
  </div>

  <!-- Pagination -->
  <% if @orders.respond_to?(:total_pages) && @orders.total_pages > 1 %>
    <div class="px-6 py-3 border-t border-orange-200 bg-orange-50">
      <div class="flex items-center justify-between">
        <div class="text-sm text-orange-600">
          Showing <%= @orders.offset_value + 1 %> to <%= @orders.offset_value + @orders.length %> of <%= @orders.total_count %> results
        </div>
        <div class="flex space-x-2">
          <% if @orders.prev_page %>
            <%= link_to "Previous", admin_orders_path(page: @orders.prev_page, **request.query_parameters), 
                class: "px-3 py-1 text-sm font-medium text-orange-600 bg-white border border-orange-300 rounded hover:bg-orange-50" %>
          <% end %>
          
          <% if @orders.next_page %>
            <%= link_to "Next", admin_orders_path(page: @orders.next_page, **request.query_parameters), 
                class: "px-3 py-1 text-sm font-medium text-orange-600 bg-white border border-orange-300 rounded hover:bg-orange-50" %>
          <% end %>
        </div>
      </div>
    </div>
  <% end %>
</div>

<script>
// Order contents toggle is now handled globally in application.js

// Handle order deletion with smooth animation
document.addEventListener('click', function(e) {
  const deleteButton = e.target.closest('button.admin-action-btn-danger');
  if (deleteButton) {
    e.preventDefault();
    e.stopPropagation();
    
    const orderId = deleteButton.dataset.orderId;
    const orderPath = deleteButton.dataset.orderPath;
    const tableRow = document.querySelector(`tr[data-order-id="${orderId}"]`);
    const detailsRow = document.querySelector(`.order-contents-details[data-order-id="${orderId}"]`);
    
    if (confirm('Are you sure you want to delete this order?')) {
      // Add loading state to the button
      const originalContent = deleteButton.innerHTML;
      deleteButton.innerHTML = '<svg class="animate-spin h-4 w-4" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg>';
      deleteButton.disabled = true;
      
      // Make the AJAX request
      fetch(orderPath, {
        method: 'DELETE',
        headers: {
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content'),
          'Accept': 'application/json',
          'Content-Type': 'application/json'
        }
      })
      .then(response => {
        if (response.ok) {
          return response.json();
        } else {
          throw new Error('Failed to delete order');
        }
      })
      .then(data => {
        // Success - hide both the main row and details row with animation
        if (tableRow) {
          tableRow.style.transition = 'all 0.3s ease-out';
          tableRow.style.opacity = '0';
          tableRow.style.transform = 'translateX(-100%)';
        }
        if (detailsRow) {
          detailsRow.style.transition = 'all 0.3s ease-out';
          detailsRow.style.opacity = '0';
          detailsRow.style.transform = 'translateX(-100%)';
        }
        
        setTimeout(() => {
          tableRow?.remove();
          detailsRow?.remove();
          
          // Update statistics if they exist
          updateOrderStatistics();
          
          // Show success message
          showNotification('Order deleted successfully', 'success');
        }, 300);
      })
      .catch(error => {
        console.error('Error:', error);
        showNotification('Failed to delete order', 'error');
        
        // Restore button state
        deleteButton.innerHTML = originalContent;
        deleteButton.disabled = false;
      });
    }
  }
});

// Function to update order statistics
function updateOrderStatistics() {
  const totalOrdersElement = document.querySelector('.admin-stats-value-orange');
  if (totalOrdersElement) {
    const currentTotal = parseInt(totalOrdersElement.textContent);
    totalOrdersElement.textContent = Math.max(0, currentTotal - 1);
  }
}

// Function to show notifications
function showNotification(message, type = 'info') {
  // Create notification element
  const notification = document.createElement('div');
  notification.className = `fixed top-4 right-4 z-50 px-6 py-3 rounded-md shadow-lg transition-all duration-300 transform translate-x-full ${
    type === 'success' ? 'bg-green-500 text-white' : 
    type === 'error' ? 'bg-red-500 text-white' : 
    'bg-blue-500 text-white'
  }`;
  notification.textContent = message;
  
  // Add to page
  document.body.appendChild(notification);
  
  // Animate in
  setTimeout(() => {
    notification.classList.remove('translate-x-full');
  }, 100);
  
  // Remove after 3 seconds
  setTimeout(() => {
    notification.classList.add('translate-x-full');
    setTimeout(() => {
      if (notification.parentNode) {
        notification.parentNode.removeChild(notification);
      }
    }, 300);
  }, 3000);
}
</script>
